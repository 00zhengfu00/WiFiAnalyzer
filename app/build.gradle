/*
 *    Copyright (C) 2015 - 2016 VREM Software Development <VREMSoftwareDevelopment@gmail.com>
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: 'com.android.application'
android {
    compileSdkVersion 22
    buildToolsVersion "23.0.2"
    def propertiesFilename = 'build.properties'
    def propertiesFile = file(propertiesFilename)
    if (propertiesFile.canRead()) {
        def Properties properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))
        def increment = 0
        def taskNames = gradle.getStartParameter().getTaskNames()
        if ('assemble' in taskNames || 'assembleRelease' in taskNames || 'aR' in taskNames) {
            increment = 1;
        }
        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = properties['version_patch'].toString().toInteger() + increment
        def versionBuild = properties['version_build'].toString().toInteger() + 1
        def versionStore = properties['version_store'].toString().toInteger() + increment
        properties['version_patch'] = versionPatch.toString()
        properties['version_build'] = versionBuild.toString()
        properties['version_store'] = versionStore.toString()

        properties.store(propertiesFile.newWriter(), null)

        defaultConfig {
            applicationId "com.vrem.wifianalyzer"
            minSdkVersion 22
            targetSdkVersion 22
            versionCode versionStore
            versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild})"
        }
    } else {
        throw new GradleException("Could not read " + propertiesFilename + " file!")
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}
dependencies {
    // Compile Build Dependencies
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.jjoe64:graphview:4.0.1'
    // Unit Test Dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'com.googlecode.junit-toolbox:junit-toolbox:2.2'
    testCompile 'org.robolectric:robolectric:3.1-SNAPSHOT'
}
